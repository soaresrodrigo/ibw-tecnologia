---
export interface ITestimonial {
  photoUrl: string;
  author: string;
  description: string;
}

interface Props {
  testimonials: ITestimonial[];
}

const { testimonials } = Astro.props;
---

<div class="testimonial js-tabcontent">
  <img class="quotation" src="/icons/quotation.svg" alt="quotation" />
  {
    testimonials.map((item) => {
      return (
        <article>
          <p>{item.description}</p>
          <div class="author">{item.author}</div>
        </article>
      );
    })
  }

  <ul class="avatars js-tabmenu">
    {
      testimonials.map((item) => {
        return (
          <li>
            <img src={item.photoUrl} alt={item.author} />
          </li>
        );
      })
    }
  </ul>
</div>

<style lang="scss">
  .js-tabmenu li {
    transform: scale(1);
    transition: 0.2s;
    opacity: 0.5;
  }

  .js-tabmenu li.active {
    opacity: 1;
    transform: scale(1.3);
    img {
      box-shadow: 10px 10px 19px -7px rgba(0, 0, 0, 0.39);
    }
  }

  .js-tabcontent article {
    display: none;
  }

  .js-tabcontent article.active {
    display: block;
    animation: show 0.5s forwards;
  }

  @keyframes show {
    from {
      opacity: 0;
      transform: translate3d(-30px, 0, 0);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }

  .testimonial {
    margin-top: 3em;
    gap: 3em;
    font-style: oblique;
    font-size: 1.3em;
    color: white;

    .quotation {
      display: block;
      margin: 0 auto 4em auto;
      width: 100px;
      opacity: 0.1;
    }

    article {
      width: 60%;
      margin: 0 auto;
      padding-bottom: 5%;
      p {
        text-align: justify;
      }

      .author {
        font-weight: bold;
        text-align: right !important;
      }
    }

    .avatars {
      display: flex;
      justify-content: center;
      gap: 100px;
      padding: 0;
      list-style: none;

      img {
        width: 60px;
        border-radius: 50%;
        cursor: pointer;
      }
    }
  }

  @media (max-width: 1000px) {

    .testimonial {


    article {
      width: 100%;
      p {
        text-align: left;
      }

      .author {
        font-weight: bold;
        text-align: right !important;
      }
    }

    .avatars {
      overflow-x: scroll;
      gap: 30px;
      height: 150px;
      align-items: center;

    }
  }
}

</style>

<script>
  const tabMenu = document.querySelectorAll(".js-tabmenu li");
  const tabContent = document.querySelectorAll(".js-tabcontent article");

  const classActive = "active";
  tabContent[0].classList.add(classActive);
  tabMenu[0].classList.add(classActive);

  if (tabMenu.length && tabContent.length) {
    function activeTab(index: number) {
      tabContent.forEach((section, index) => {
        section.classList.remove(classActive);
        tabMenu[index].classList.remove(classActive);
      });
      tabContent[index].classList.add(classActive);
      tabMenu[index].classList.add(classActive);
    }

    tabMenu.forEach((itemMenu, index) => {
      itemMenu.addEventListener("click", () => {
        activeTab(index);
      });
    });
  }
</script>
